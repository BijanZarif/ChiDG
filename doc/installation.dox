/*!

\page page_installation Installation
This page details the information required to successfully build the ChiDG project. One should be sure 
to first address the required dependencies of the project, which are detailed below. Also, a recent 
compiler version should be used. The following steps outline the process for successfully building ChiDG.

Installing ChiDG:
    1. \ref s_obtaining
    2. \ref s_dependencies
    3. \ref s_compile


\n
<HR>
<HR>

\section s_obtaining Obtaining ChiDG
ChiDG is hosted in a git repository on <a href="https://www.gitlab.com">www.gitlab.com</a> and may be cloned using either 
`ssh` or `https` protocols as 


\code  git clone git@gitlab.com:nwukie/ChiDG.git ChiDG         \endcode

\code  git clone https://gitlab.com/nwukie/ChiDG.git ChiDG     \endcode


<B>
NOTE: ChiDG is currently in pre-release. As such, public read-access to the above repository is restricted.
</B>

\n
\n



<HR>
<HR>

\section s_dependencies ChiDG Dependencies
ChiDG depends on several libraries that enable IO and parallelization activities. 
These components are required to build ChiDG.


<li> \ref s_dep_hdf5    </li>\n
<li> \ref s_dep_mpich   </li>\n
<li> \ref s_dep_cmake   </li>\n
<li> \ref s_dep_tecio (distributed with ChiDG) </li>\n


\n




<HR>
\subsection s_dep_hdf5 HDF5
HDF5 is used as a container for the ChiDG grid/solution files and is a required depencency of ChiDG.

<a href="https://www.hdfgroup.org">HDF5 Website</a>



\n
\n




<HR>
\subsection s_dep_mpich MPICH
The `mpich` source or precompiled packages can be downloaded from the MPICH website.

<a href="https://www.mpich.org">MPICH Website</a>

\subsubsection s_dep_mpich_configuration Compile MPICH
When compiling `mpich`, the following procedure is used to set the relevant compilers and
configure mpich to be built.

The following configuration command is used in the root `mpich` directory to set up the build:
\code   ./configure --prefix=/usr/local/mpich/gnu --enable-fortran=all CC=gcc CXX=g++ F77=gfortran FC=gfortran 2>&1 | tee c.txt   \endcode
The `CC`, `CXX`, `F77`, and `FC` variables set in the configure line are used to set the C, C++, and Fortran compilers.



Compile `mpich` with:
\code   make 2>&1 | tee m.txt   \endcode


Install `mpich` with:
\code   make install 2>&1 | tee mi.txt  \endcode


\subsubsection s_dep_mpich_variables Set environment variables for MPICH
The `cmake` build script requires the `MPI_ROOT` environment variable to be set.

\code   export MPI_ROOT=/usr/local/mpich    \endcode

This must be set such that `${MPI_ROOT}/gnu` or `${MPI_ROOT}/intel` are valid; allowing
the `cmake` script to select the correct installation based on the compiler vendor being used.







\n
\n


<HR>
\subsection s_dep_cmake CMake
ChiDG uses the CMake build-system to generate the 'make' configuration files for the project.

<a href="https://cmake.org">CMake Website</a>





\n
\n



<HR>
\subsection s_dep_tecio TecIO
Tecplot 360 is the primary visualization tool currently used for ChiDG. The TecIO libraries are distributed
with the ChiDG project for multiple systems and should be linked accordingly without user intervention. If,
for some reason, the packaged TecIO libraries are incompatible with your system, new libraries can be downloaded
from the Tecplot website.

<a href="http://www.tecplot.com/downloads/tecio-library">TecIO Libraries</a>



\n
\n

<HR>
<HR>

\section s_compile Compiling ChiDG

NOTE: ChiDG uses features of the most recent Fortran standard (F2008). Up-to-date Fortran compilers are \b required.

Successfully tested compiler versions:
        - gfortran 5.2


ChiDG uses the CMake build system. Out-of-source builds, as described here, are the only supported build method.
        - Change to the ChiDG root directory.   
                \code  cd ChiDG/       \endcode
        - Create a new build directory.         
                \code  mkdir build    \endcode
        - Change to the build directory.        
                \code  cd build        \endcode
        - Execute the CMake command with options to configure the build
                \code  cmake -DCMAKE_Fortran_COMPILER=gfortran-5.2 -DCMAKE_BUILD_TYPE=Release ..   \endcode 
        - Run make to build the ChiDG executable
                \code  make            \endcode





\n
\n
*/




