/*!

\page page_installation Installation
This page details the information required to successfully build the ChiDG project. One should be sure 
to first address the required dependencies of the project, which are detailed below. Also, a recent 
compiler version should be used. The following steps outline the process for successfully building ChiDG.

Installing ChiDG:
    1. \ref s_obtaining
    2. \ref s_dependencies
    3. \ref s_compile


\n
<HR>
<HR>

\section s_obtaining Obtaining ChiDG
ChiDG is hosted in a git repository on <a href="https://www.github.com">www.github.com</a> and may be cloned 
using the `https` protocol as 

\code  git clone https://github.com/nwukie/ChiDG.git ChiDG     \endcode

\n
\n



<HR>
<HR>

\section s_dependencies ChiDG Dependencies
ChiDG depends on several libraries that enable IO and parallelization activities. 
These components are required to build ChiDG.


<li> \ref s_dep_hdf5    </li>\n
<li> \ref s_dep_cmake   </li>\n
<li> \ref s_dep_tecio (distributed with ChiDG) </li>\n


\n




<HR>
\subsection s_dep_hdf5 HDF5
HDF5 is used as a container for the ChiDG grid/solution files and is a required depencency of ChiDG. 

<a href="https://www.hdfgroup.org">HDF5 Website</a>


The HDF5 library gives the option to build various portions of the library itself, depending on what 
the user needs available. ChiDG uses the HDF5 fortran module interfaces and the high-level 
API. Be sure to configure with the appropriate flags when building HDF5. Refer to the
HDF5 documentation and installation guide for complete directions. Likey configuration
parameters that are needed are:

    --enable-fortran
    --enable-fortran2003


The CMake build will try to automatically locate the HDF5 libraries and modules. To ensure they are found,
<B> be sure to set the `HDF5_ROOT` environment variable </B> such that the directory includes the `bin`, `lib`, and
`include` directories where the libraries and modules can be located.

\n
\n




<HR>
\subsection s_dep_cmake CMake
ChiDG uses the CMake build-system to generate the 'make' configuration files for the project. 
If you don't already have CMake installed on your system, you should 
be able to download a binary from the <a href="https://cmake.org">CMake Website</a>.





\n
\n



<HR>
\subsection s_dep_tecio TecIO
Tecplot 360 is the primary visualization tool currently used for ChiDG. The TecIO libraries are distributed
with the ChiDG project for multiple systems and should be linked accordingly without user intervention. If,
for some reason, the packaged TecIO libraries are incompatible with your system, new libraries can be downloaded
from the Tecplot website.

<a href="http://www.tecplot.com/downloads/tecio-library">TecIO Libraries</a>



\n
\n

<HR>
<HR>

\section s_compile Compiling ChiDG

NOTE: ChiDG uses features of the most recent Fortran standard (F2008). Up-to-date Fortran compilers are \b required.

Successfully tested compiler versions:
        - gfortran 5.2


ChiDG uses the CMake build system. Out-of-source builds, as described here, are the only supported build method.
        - Change to the ChiDG root directory.   
                \code  cd ChiDG/       \endcode
        - Create a new build directory.         
                \code  mkdir build    \endcode
        - Change to the build directory.        
                \code  cd build        \endcode
        - Execute the CMake command with options to configure the build
                \code  cmake -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_BUILD_TYPE=Release ..   \endcode 
        - Run make to build the ChiDG executable
                \code  make            \endcode





\n
\n
*/




