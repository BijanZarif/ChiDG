macro (add_test_target target_subdirectory test_type)
	# set target name
    if (${ARGV1} MATCHES "unit")
	    set(target_name unittest_${ARGV0})
        set(jenkins_file unittest.sh)
    elseif ( ${ARGV1} MATCHES "reg")
        set(target_name regtest_${ARGV0})
        set(jenkins_file regtest.sh)
    else()
        message(SEND_ERROR "Invalid test type. Valid types are 'unit' and 'reg'")
    endif()


	# Create folder for parsed test files in the build directory
	file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/generated/${ARGV0})
	
	# Create input file for registering tests
	file(REMOVE ${CMAKE_BINARY_DIR}/generated/${ARGV0}/testSuites.inc)
	
	# Include directory created above so the .inc file is available
	include_directories(${CMAKE_BINARY_DIR}/generated/${ARGV0})
	
	# Include access to pfunit module
	include_directories(${PF_ROOT}/mod)
	

	#################################################################################
    # Loop through each test file, process with pFUnitParser and generate list of output files for compiler
    # DEPENDS option ensures that if the .pf file is changed, the parser will be called to reprocess the file
    #################################################################################
	set(_test_sources)
    foreach (_test ${ARGN})
    	# Get filename without extension (NAME_WE)
    	get_filename_component(filename ${_test} NAME_WE)
    	
    	# Test preprocessor command
        if (${ARGV1} MATCHES "unit")

            add_custom_command(
                OUTPUT ${CMAKE_BINARY_DIR}/generated/${ARGV0}/${filename}.F90
                COMMAND ${PF_ROOT}/bin/pFUnitParser.py ${CMAKE_SOURCE_DIR}/unit_testing/${ARGV0}/${filename}.pf ${CMAKE_BINARY_DIR}/generated/${ARGV0}/${filename}.F90
                DEPENDS ${CMAKE_SOURCE_DIR}/unit_testing/${ARGV0}/${filename}.pf
                )

        elseif (${ARGV1} MATHCES "reg")

            add_custom_command(
                OUTPUT ${CMAKE_BINARY_DIR}/generated/${ARGV0}/${filename}.F90
                COMMAND ${PF_ROOT}/bin/pFUnitParser.py ${CMAKE_SOURCE_DIR}/reg_testing/${ARGV0}/${filename}.pf ${CMAKE_BINARY_DIR}/generated/${ARGV0}/${filename}.F90
                DEPENDS ${CMAKE_SOURCE_DIR}/reg_testing/${ARGV0}/${filename}.pf
                )
        
        endif()
        	




        # Accumulate list of test sources to define target
     	set(_test_sources ${_test_sources} ${CMAKE_BINARY_DIR}/generated/${ARGV0}/${filename}.F90)
     	
     	# Register test in input .inc file for pftest
     	file(APPEND ${CMAKE_BINARY_DIR}/generated/${ARGV0}/testSuites.inc "ADD_TEST_SUITE(${filename}_suite)\n")
	endforeach()
	
	set_source_files_properties(${PF_ROOT}/include/driver.F90 PROPERTIES GENERATED 1)
	
	##################################################################################
	## define test target and link with pfunit and coredg libraries
	##################################################################################
	add_executable(${target_name} ${PF_ROOT}/include/driver.F90 ${_test_sources})
	target_link_libraries(${target_name} ${PF_ROOT}/lib/libpfunit.a coredg -lstdc++ -lpthread)
	
	set_target_properties(${target_name} PROPERTIES 
                             COMPILE_FLAGS ""
                             LINK_FLAGS    "")
	
	                         # COMPILE_FLAGS "-prof-gen=srcpos" code coverage flags
	
	##################################################################################
	##	Add test that can be run with 'make test' or 'ctest'
	##################################################################################
	add_test(NAME ${target_name}
			 WORKING_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
			 COMMAND $<TARGET_FILE:${target_name}>)
			 
			 
	##################################################################################
	##	Add test target to shell script used by Jenkins for executing individual tests
	##################################################################################
	if (EXISTS "${CMAKE_BINARY_DIR}/bin/${jenkins_file}")
		file(APPEND ${CMAKE_BINARY_DIR}/bin/${jenkins_file} "./${target_name} -xml ${target_name}.xml\n")
	else()
		file(APPEND ${CMAKE_BINARY_DIR}/bin/${jenkins_file} "#!/bin/bash\n")
		file(APPEND ${CMAKE_BINARY_DIR}/bin/${jenkins_file} "cd $WORKSPACE/build/bin\n")
		file(APPEND ${CMAKE_BINARY_DIR}/bin/${jenkins_file} "./${target_name} -xml ${target_name}.xml\n")
	endif()
	
endmacro()
